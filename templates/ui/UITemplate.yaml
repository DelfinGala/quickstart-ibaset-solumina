AWSTemplateFormatVersion: 2010-09-09
Description: create a single LogGroup
Parameters:
  VPC:
    Type: 'AWS::EC2::VPC::Id'
  bastionIDValue:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: bastionID
  QSS3BucketName:
    Type: String
  QSS3KeyPrefix:
    Type: String
    Default: quickstart-ibaset-solumina/
  LogsBucketName:
    Type: String
    Description: Logs S3 Bucket
  LogsKeyPrefix:
    Type: String
    Description: Logs KeyPrefix
Resources:
  UIWaitHandle:
     Type: AWS::CloudFormation::WaitConditionHandle
  UIWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties:
      Handle: !Ref UIWaitHandle
      Timeout: '7200'
      Count: 1
  SSMUIwaitHandle:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name: "UIWaitHandle"
      Type: "String"
      Value: !Ref UIWaitHandle
      Description: "SSM Parameter for wait condition handle"
      Tags:
        "Name": "UIWaitHandle"
  SampleLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Ref bastionIDValue
      RetentionInDays: 7
  association:
    Type: 'AWS::SSM::Association'
    Properties:
      AssociationName: DeployUI
      Name: AWS-RunShellScript
      Parameters:
        commands:
          - |
            EC2_AVAIL_ZONE=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone`
            EC2_REGION="`echo \"$EC2_AVAIL_ZONE\" | sed 's/[a-z]$//'`"
            QSS3BucketName=$(aws ssm get-parameters --name QSS3BucketName --region $EC2_REGION --query Parameters[0].Value)
            QSS3KeyPrefix=$(aws ssm get-parameters --name QSS3KeyPrefix --region $EC2_REGION --query Parameters[0].Value)
            QSS3KeyPrefix=${QSS3KeyPrefix//\"/}
            QSS3BucketName=${QSS3BucketName//\"/}
            S3SyncURL=${QSS3BucketName}/${QSS3KeyPrefix}
            sudo aws s3 cp s3://${S3SyncURL}templates/ui/UIDeploymentScript.sh /
            sudo chmod +x UIDeploymentScript.sh
            sudo chown ec2-user:ec2-user /UIDeploymentScript.sh
            sudo mkdir -p /exec-ui
            sudo chown -R ec2-user:ec2-user /exec-ui
            sudo su ec2-user -l bash -c /UIDeploymentScript.sh
      Targets:
        - Key: InstanceIds
          Values:
            - !Ref bastionIDValue
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref 'LogsBucketName'
          OutputS3KeyPrefix: !Ref 'LogsKeyPrefix'
    DependsOn: UIWaitCondition
Outputs:
  bastionIDValue:
    Value: !Ref bastionIDValue
